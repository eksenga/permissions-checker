plugins {
    id 'java'
    id 'application'
}

group = 'com.canyonetcie'
version = '1.0.0'
description = 'A Java application for managing folder permissions based on user roles'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'junit:junit:4.13.2'
}

application {
    mainClass = 'com.canyonetcie.PermissionsChecker'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes(
            'Main-Class': 'com.canyonetcie.PermissionsChecker',
            'Implementation-Title': project.name,
            'Implementation-Version': project.version
        )
    }
}

test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
}

// Task to create a fat jar with all dependencies
task fatJar(type: Jar) {
    archiveClassifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
    manifest {
        attributes(
            'Main-Class': 'com.canyonetcie.PermissionsChecker'
        )
    }
}

// Custom task to run the application
task runApp(type: JavaExec) {
    group = 'application'
    description = 'Run the Permissions Checker application'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.canyonetcie.PermissionsChecker'
}

// Task to run the application with a specific command
task runWithCommand(type: JavaExec) {
    group = 'application'
    description = 'Run the Permissions Checker application with a command (use -Pcommand=<cmd>)'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.canyonetcie.PermissionsChecker'
    if (project.hasProperty('command')) {
        args project.property('command')
    }
}
